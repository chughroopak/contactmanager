{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","Axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","Header","branding","match","params","Test","title","body","fetch","then","response","json","EditContact","updContact","put","App","exact","path","component","About","NotFound","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.398dbd4e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: \"John Doe\",\r\n      //   email: \"jdoe@gmail.com\",\r\n      //   phone: \"555-555-5555\"\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: \"Karen Williams\",\r\n      //   email: \"karen@gmail.com\",\r\n      //   phone: \"222-222-2222\"\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: \"Henry Johnson\",\r\n      //   email: \"henry@gmail.com\",\r\n      //   phone: \"333-333-3333\"\r\n      // }\r\n    ],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className='fas fa-sort-down'></i>\r\n                <i\r\n                  className='fas fa-times'\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt'\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>{email}</li>\r\n                  <li className='list-group-item'>{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const contacts = value.contacts;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await Axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: res.data\r\n    });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <Link to='/' className='navbar-brand'>\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-link'>\r\n                <i className='fas fa-home'></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/contact/add' className='nav-link'>\r\n                <i className='fas fa-plus'></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/about' className='nav-link'>\r\n                <i className='fas fa-question'></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className='lead'>Simple app to manage contacts</p>\r\n      <p className='text-secondary'>\r\n        Version {props.match.params.id ? props.match.params.id : 1}.0.0\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>\r\n        <span className='text-danger'>404</span> Page Not Found\r\n      </h1>\r\n      <p className='lead'>Sorry, that page does not exist.</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  //   componentWillMount() {\r\n  //     console.log(\"componentWillMount\");\r\n  //   }\r\n\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"componentDidUpdate\");\r\n  //   }\r\n\r\n  //   componentWillUpdate() {\r\n  //     console.log(\"componentWillUpdate\");\r\n  //   }\r\n\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"componentWillReceiveProps..\");\r\n  //   }\r\n\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return {\r\n  //       test: \"something\"\r\n  //     };\r\n  //   }\r\n\r\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {}\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\n// import AddContact from \"./components/contacts/AddContact\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                {/* example to use params */}\n                <Route exact path='/about/:id' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}